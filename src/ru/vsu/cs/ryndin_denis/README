Диаграмма активностей
Показывает все возможные состояния, в которых может находиться система, а также переходы
между этими состояниями. Эта диаграмма используется для описания поведения системы в
различных ситуациях.
У нас есть начальное состояние и конечное состояние. Все действия такие как (нанять научного
сотрудника, преподавать курс, старт проекта, завершение проекта) связаны переходами потока,
мы используем стрелку чтобы изобразить поток управления
Узел принятия решений(ромб) позволяет нам один входящий поток разделить на множество
исходящих.
Узел слияния – объединяет несколько входящих потоков в один.

Диаграмма последовательностей
Эта диаграмма описывает взаимодействие между набором объектов, участвующих в
сотрудничестве (или сценарии), расположенных в хронологическом порядке; он показывает
объекты, участвующие во взаимодействии, по их «линиям жизни» и сообщениям, которые они
посылают друг другу, пунктирные линии это обратные сообщения.

Диаграмма классов
Диаграмма классов описывает структуру объектно-ориентированной системы, показывая классы в
этой системе и отношения между классами. Диаграмма классов также показывает ограничения и
атрибуты классов.
+ это операции. Которые видимы всем т.е public – это атрибуты которые приватны
Ассоциация — это связь между двумя классами.
Существует двунаправленная - это означает, что оба класса знают друг о друге и об их
отношениях.
Множественность символы ( 1 0..1 * 0..* 1..*) обозначают количество экземпляров одного класса,
связанных с одним экземпляром другого класса
Обобщение - связь между классом и подклассом.(родительский, дочерний) обозначается
стрелкой
Реализация — это связь между двумя вещами, где одна вещь (интерфейс) определяет контракт,
который другая вещь (класс) гарантирует выполнение, реализуя операции, указанные в этом
контракте. Обозначается пунктирной линией либо обозначает зависимость одного класса от
другого.
Агрегация встречается, когда один класс является коллекцией или контейнером других. Причём
по умолчанию, агрегацией называют агрегацию по ссылке, то есть когда время существования
содержащихся классов не зависит от времени существования содержащего их класса. Если
контейнер будет уничтожен, то его содержимое — нет. Графически агрегация представляется
пустым ромбом
Композиция имеет жёсткую зависимость времени существования экземпляров класса контейнера
и экземпляров содержащихся классов. Если контейнер будет уничтожен, то всё его содержимое
будет также уничтожено. Графически представляется, как и агрегация, но с закрашенным
ромбиком.
Перейдем